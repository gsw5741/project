<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
	
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd 
	
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	">
	<context:component-scan base-package="cn.com.**.service">
	 <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<bean id="propertiesFactory" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	  <property name="locations">
	    <list>
	      <value>classpath:db.properties</value>
	      <value>classpath:config.properties</value>
	    </list>
	  </property>
	  <property name="fileEncoding" value="UTF-8"/>
	</bean>
	<bean id="propertyConfigurer" class="cn.com.component.spring.properties.CustomPropertyPlaceholderConfigurer" p:properties-ref="propertiesFactory"/>

	<!-- 数据源 -->
	<bean id="mynetworkDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
	   <property name="name" value="${jdbc.databaseName}"/>
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="dbType" value="${jdbc.dbType}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="filters" value="${jdbc.filters}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
	</bean>
	<!-- mybatis与spring整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <property name="dataSource" ref="multiDatasource"/>
	  <property name="configLocation" value="classpath:spring/mybatis-config.xml"/>
	  <property name="mapperLocations" value="classpath*:mybatis/**/*.xml"/>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="cn.com.**.dao"/>
	  <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<bean id="multiDatasource" class="cn.com.component.spring.datasource.MultiDataSource">
	   <property name="targetDataSources">
	       <map>
	        <entry key="mynetworkDataSource" value-ref="mynetworkDataSource"/>
	       </map>
	   
	   </property>
	<property name="defaultTargetDataSource" ref="mynetworkDataSource"/>
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="multiDatasource"/>
	</bean>
	<!-- 使用注解定义事务 -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
	<!--配置druid数据源监控 -->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"/>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut">
	  <property name="patterns">
	    <list>
	      <value>cn.com.mynetWork.service..*.*(..)</value>
	    </list>
	  </property>
	</bean>
	<aop:config>
	 <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut"/>
	</aop:config>
	
	<import resource="classpath:shiro/shiro-${shiro.login}.xml"/>
	<import resource="classpath:spring/dubbo-consumer.xml"/>
	</beans>