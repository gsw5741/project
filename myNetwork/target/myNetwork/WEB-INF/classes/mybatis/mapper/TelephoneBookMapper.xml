<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.mynetwork.dao.TelephoneBookDao" >
  <resultMap id="BaseResultMap" type="cn.com.mynetwork.bean.TelephoneBook" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="TELEPHONE" property="telephone" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="GROUP_ID" property="groupId" jdbcType="VARCHAR" />
    <result column="CREATE_ID" property="createId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, TELEPHONE, NAME, ADDRESS, GROUP_ID, CREATE_ID, CREATE_TIME, MODIFY_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ${db.network}.TELEPHONE_BOOK
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ${db.network}.TELEPHONE_BOOK
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
 
  <insert id="insertSelective" parameterType="cn.com.mynetwork.bean.TelephoneBook" >
    insert into ${db.network}.TELEPHONE_BOOK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="telephone != null" >
        TELEPHONE,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="groupId != null" >
        GROUP_ID,
      </if>
      <if test="createId != null" >
        CREATE_ID,
      </if>
     
        CREATE_TIME,
    
    
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=VARCHAR},
      </if>
       NOW(),
   
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.mynetwork.bean.TelephoneBook" >
    update ${db.network}.TELEPHONE_BOOK
    <set >
      <if test="telephone != null" >
        TELEPHONE = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        GROUP_ID = #{groupId,jdbcType=VARCHAR},
      </if>
     
        MODIFY_TIME = NOW(),
     
      
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
 <select id="listPageTelephoneBookList" resultMap="BaseResultMap" parameterType="cn.cn.com.common.vo.PageVO">
      select 
    <include refid="Base_Column_List" />
    from ${db.network}.TELEPHONE_BOOK
    where 1 = 1
     <if test="param.searchText != null and param.searchText != ''">
     and CONCAT(TELEPHONE, ',' ,NAME, ',', ADDRESS) like CONCAT(CONCAT('%',#{param.searchText,jdbcType = VARCHAR}),'%')
    </if>
 </select>
 <select id="getTotal"  resultType="int" parameterType="cn.com.mynetwork.bean.TelephoneBook">
    select count(*)
    from ${db.network}.TELEPHONE_BOOK
    where 1 = 1
    <if test="searchText != null and searchText != ''">
     and CONCAT(TELEPHONE, ',' ,NAME, ',', ADDRESS) like CONCAT(CONCAT('%',#{searchText,jdbcType = VARCHAR}),'%')
    </if>
 </select>
</mapper>